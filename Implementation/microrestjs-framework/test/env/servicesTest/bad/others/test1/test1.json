{
	"microrestSpecification": 1,
	"info": {
		"name": "test1",
		"version": "0.0.1",
		"api": 1,
		"description": "Greets everybody with Hello World",
		"keywords": ["Hello World", "Greets"],
		"date": "2015-06-03",
		"authors": [
			{
				"name": "Carlos Lozano SÃ¡nchez",
			 	"email": "carloslozano@freshhy.com",
			 	"url": "https://www.linkedin.com/in/clozanosanchez"
			}
		],
		"homepage": "https://git.rhrk.uni-kl.de/sanchezc/microrestjs",
		"repository": {
			"type": "git",
			"url": "https://git.rhrk.uni-kl.de/sanchezc/microrestjs-framework.git"
		}
	},

	"config": {
		"location": "directory"
	},

	"security": {
		"scheme":"basic"
	},

	"operations": {
		"greetNull": {
			"request": { 
				"path": "/greet/:username",
				"method": "GET",
				"parameters": {
					"username": {
						"in": "path",
						"description": "Name of the user that wishes a greet",
						"required": true,
						"type": "string"
					}
				}
			},

			"responses": {
				"OK": {
					"statusCode": 200,
					"description": "The custom greet for the request user is sent",
					"body": {
						"greet": {
							"type": "string",
							"description": "Custom greet with the format 'Hello World, :username'",
							"required": true
						}
					}
				}
			},

			"errors": {
				"BAD_REQUEST": {
					"statusCode": 400,
					"description": "The request has an invalid username"
				}
			}
		},
		"greetUndefined": {
			"request": { 
				"path": "/greet/:username",
				"method": "GET",
				"parameters": {
					"username": {
						"in": "path",
						"description": "Name of the user that wishes a greet",
						"required": true,
						"type": "string"
					}
				}
			},

			"responses": {
				"OK": {
					"statusCode": 200,
					"description": "The custom greet for the request user is sent",
					"body": {
						"greet": {
							"type": "string",
							"description": "Custom greet with the format 'Hello World, :username'",
							"required": true
						}
					}
				}
			},

			"errors": {
				"BAD_REQUEST": {
					"statusCode": 400,
					"description": "The request has an invalid username"
				}
			}
		},
		"greetNotFunction": {
			"request": { 
				"path": "/greet/:username",
				"method": "GET",
				"parameters": {
					"username": {
						"in": "path",
						"description": "Name of the user that wishes a greet",
						"required": true,
						"type": "string"
					}
				}
			},

			"responses": {
				"OK": {
					"statusCode": 200,
					"description": "The custom greet for the request user is sent",
					"body": {
						"greet": {
							"type": "string",
							"description": "Custom greet with the format 'Hello World, :username'",
							"required": true
						}
					}
				}
			},

			"errors": {
				"BAD_REQUEST": {
					"statusCode": 400,
					"description": "The request has an invalid username"
				}
			}
		}
	}
}